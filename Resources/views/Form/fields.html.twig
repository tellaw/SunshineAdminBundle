{% use "bootstrap_3_layout.html.twig" %}

{% block form_start -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-horizontal')|trim}) %}
    {{- parent() -}}
{%- endblock form_start %}

{# Labels #}

{% block form_label -%}
    {% spaceless %}
        {% if label is same as(false) %}
            <div class="{{ block('form_label_class') }}"></div>
        {% else %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ block('form_label_class'))|trim}) %}
            {{- parent() -}}
        {% endif %}
    {% endspaceless %}
{%- endblock form_label %}

{% block form_label_class -%}
    col-sm-2
{%- endblock form_label_class %}

{# Rows #}

{% block form_row %}
    <div class="form-group{% if (not compound or force_error|default(false)) and not valid %} has-error{% endif %}">
        {{- form_label(form) -}}
        <div class="{{ block('form_group_class') }}">
            {{- form_widget(form) -}}
            {{- form_errors(form) -}}
        </div>
    </div>
{% endblock form_row %}

{% block checkbox_row -%}
    {{- block('checkbox_radio_row') -}}
{%- endblock checkbox_row %}

{% block radio_row -%}
    {{- block('checkbox_radio_row') -}}
{%- endblock radio_row %}

{% block checkbox_radio_row -%}
    {% spaceless %}
        <div class="form-group{% if not valid %} has-error{% endif %}">
            <div class="{{ block('form_label_class') }}"></div>
            <div class="{{ block('form_group_class') }}">
                {{ form_widget(form) }}
                {{ form_errors(form) }}
            </div>
        </div>
    {% endspaceless %}
{%- endblock checkbox_radio_row %}

{% block submit_row -%}
    {% spaceless %}
        <div class="form-group">
            <div class="{{ block('form_label_class') }}"></div>
            <div class="{{ block('form_group_class') }}">
                {{ form_widget(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endblock submit_row %}

{% block reset_row -%}
    {% spaceless %}
        <div class="form-group">
            <div class="{{ block('form_label_class') }}"></div>
            <div class="{{ block('form_group_class') }}">
                {{ form_widget(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endblock reset_row %}

{% block form_group_class %}
    col-sm-10
{% endblock form_group_class %}

{# Collection sunshine #}

{%- block form_widget_collection -%}
    {% if compound %}
        {{- block('form_widget_compound_collection') -}}
    {% else %}
        {{- block('form_widget_simple_collection') -}}
    {% endif %}
{%- endblock form_widget_collection -%}

{%- block form_widget_compound_collection -%}

    <div {{ block('widget_container_attributes') }}>

        {%- if form.parent is empty -%}
            {{ form_errors(form) }}
        {%- endif -%}
        {{- block('form_rows_collection') -}}
        {{- form_rest(form) -}}

    </div>
{%- endblock form_widget_compound_collection -%}

{% block form_row_collection %}
    <div class="form-group">
        <div class="{{ block('form_group_class') }}">
            {% if form.parent.vars.allow_delete == true %}
            <div class="collectionDeleteButton col-sm-1"><a href="#" class="remove-tag btn btn-danger collection-delete" data-entityname = "{{ getClassName(data)}}" data-id = "{{ data.id }}">x</a></div>
            <div class="collectionForm col-sm-11">
                {{- form_widget(form) -}}
                {{- form_errors(form) -}}
            </div>
            {% else %}
                {{- form_widget(form) -}}
                {{- form_errors(form) -}}
            {% endif %}

        </div>
    </div>
{% endblock form_row_collection %}

{% block form_rows_collection %}

    {% for child in form %}
        <div class="list-group-item list-group-item-action row" >
            {{- form_row_collection(child) -}}
        </div>
    {% endfor %}

{% endblock form_rows_collection %}

{% block collection_widget %}

    <div class="list-group">
    {% if prototype is defined %}
        {%- set attr = attr|merge({'data-prototype': form_row(prototype) }) -%}
    {% endif %}

    {{- block('form_widget_collection') -}}
    </div>
    {% if prototype is defined %}
        <div class="col-sm-12" id="button_add_{{ form.vars.id }}">
            <a style="" href="#" id="add_{{ form.vars.id }}" class="btn btn btn-info pull-left">+ Add element</a>
        </div>
    {% endif %}

{% endblock collection_widget %}


{#Tags #}

{%- block tag_widget -%}
    {% spaceless %}
        {% if value is not empty %}
            {%- set type = type|default('text') -%}
            <div>
                <input type="{{ type }}" {{ block('widget_attributes') }} class="form-control input-larg"
                       data-role="tagsinput" style="display: none;"
                       value="{{ value|default('') }}"/>
            </div>
            {% else %}
            {{ block('form_widget_simple') }}
        {% endif %}

    {% endspaceless %}
{%- endblock tag_widget -%}

{% block select2_widget %}
    {{ form_widget(form) }}
    <script type="text/javascript">
        $(document).ready(function () {
            $(".{{ name }}-select2").select2({
                language: "fr",
                placeholder: 'SÃ©lectionner une option',
                allowClear: true,
                    ajax: {
                        url: "{{ path('sunshine_ajax_select2_callback', { "entityName" : name, "toStringField" : attr.filterAttribute,  }) }}",
                        dataType: 'json',
                        method: 'post',
                        delay: 500,

                        data: function (params) {
                            return {
                                q: params.term, // search term
                                page: params.page,
                                relatedClass: '{{ attr.relatedClass }}',
                                callbackFunction: '{{ attr.callbackFunction }}'
                            };
                        },

                        processResults: function (data, params) {
                            params.page = params.page || 1;

                            return {
                                results: data.items,
                                pagination: {
                                    more: (params.page * 10) < data.total_count
                                }
                            };
                        },
                        cache: true
                    }

                });
        });
    </script>
{% endblock %}
